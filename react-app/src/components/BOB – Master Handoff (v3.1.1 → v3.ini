BOB – Master Handoff (v3.1.1 → v3.4 Roadmap)

Owner: Jim Donnelly
Date: September 1, 2025
Audience: Development AI / Code Review Agent (“AO”)
Purpose: Authoritative requirements + defect log for BOB app, covering current state (v3.1.1) and next milestone (v3.4).

⸻

1) Executive Context

The BOB App is a Firebase Firestore–based productivity platform for managing Goals → Stories → Tasks, sprints, habits, calendar blocks, integrations, and routines.
	•	v3.0.7 baseline delivered Sprint Planner (2-D matrix), Pragmatic DnD, Theme colour inheritance.
	•	v3.0.8 introduced regressions (entities not surfacing, side-panels gone).
	•	v3.1.0 included Global Activity Stream + UI Tracking.
	•	v3.1.1 fixes P1 issues, adds Enhanced Logging, Calendar UI foundation, Routines/Chores.
	•	v3.4 introduces the Goal Visualization view (roadmap-style timeline), with CRUD parity for Goals, Stories, Tasks, Sprints.

⸻

2) Versioning
	•	App version: v3.1.1
	•	This document: Master Handoff (v3.1.1 baseline + v3.4 roadmap)

⸻

3) Runtime Observations (v3.1.1)
	•	Global Activity Stream and UI Tracking active.
	•	Sprint listener returning data but throwing missing index error and duplicating listeners.
	•	Auth listener functional (user: donnelly.jim@gmail.com).

⸻

4) 🔴 P1 Defects (Blockers, v3.1.1)

0. Activity Stream write failing (console flood)

Symptoms
	•	Repeating Firestore errors:
“Failed to track view: FirebaseError: Function addDoc() called with invalid data. Unsupported field value: undefined (found in field referenceNumber in document activity_stream/…)”
	•	Example context: entityType=goal, entityTitle=“Run an Iron Man”.

Impact
	•	Activity entries not saved.
	•	Console flooded, masking other issues.
	•	Global Activity Stream unreliable.

Root cause
	•	Activity payload includes referenceNumber: undefined.
	•	Schema/spec standardises on ref, but some tracking code still uses referenceNumber.
	•	No validation or fallback before addDoc.

Immediate fixes
	•	Guard: if referenceNumber undefined, populate from entity.ref.
	•	If ref missing, fallback to “GOAL-”.
	•	Align schema to use ref as canonical, dual-write referenceNumber=ref for now.
	•	Validate payload before addDoc.
	•	Throttle duplicate console logs.

Structural fixes
	•	Shared activity builder utility to normalise: { ref, entityId, entityType, entityTitle, action, metadata, ts }.
	•	Add schema validation (e.g., zod).
	•	Add tests for missing ref/referenceNumber.

Acceptance criteria
	•	Viewing Goal/Story/Task produces exactly one valid activity_stream entry.
	•	No console flood.
	•	All activity docs contain a valid ref.

⸻

1. Boards & Tables not syncing with DB
	•	Entities exist in Firestore but not visible in tables, Kanban, or Planner.

2. Side-panel editing missing
	•	CRUD side-panel for Goals/Stories/Tasks has disappeared.

3. Ref numbers not displayed
	•	GOAL-###, STRY-###, TASK-### missing in list rows/cards/side-panels.

4. Sprint loading spinner stuck
	•	Runtime logs confirm missing Firestore index + duplicate listeners.
	•	Causes infinite loading state.

5. Cannot add Stories to Goals
	•	Creating a Story under a Goal fails silently, goalId linkage missing.

6. Notes not persisting/rendering
	•	Writes succeed? UI fails to show notes. Example payload:
{ “itemId”: “ppYk7ciyaphZUnzJSIUe”, “itemType”: “task”, “note”: “blah”, “userId”: “Cdmmvv8BhWMF2CvUgoNzQfxtGx62”, “userEmail”: “donnelly.jim@gmail.com”, “referenceNumber”: “TK-PPYK7C” }

7. Inline tracking “Enter” does not save
	•	Must commit immediately to Firestore, not just on blur.

⸻

5) 🟡 P2 Issues
	•	DnD persistence inconsistent (ranks lost after refresh).
	•	Planner row expansion not persisted.
	•	Theme colour cascade incomplete.
	•	Listener error handling inadequate.

⸻

6) 🟢 P3 Issues
	•	Accessibility gaps (Planner keyboard flows, screen-reader).
	•	Undo toast missing in Goals/Tasks tables.
	•	Logs not surfaced clearly in UI.

⸻

7) Priority Requirements (Consolidated, v3.1.1)
	•	Sprint Planner (2-D matrix)
	•	Current Sprint Kanban
	•	Calendar Blocking & AI Scheduling (Google Calendar sync + GCal-style grid UI)
	•	Daily LLM Digest
	•	Health & Nutrition integrations (Strava, Runna, MyFitnessPal)
	•	iOS Reminders sync
	•	Mobile “Important Now”
	•	Selenium CI + side-door auth
	•	Theme colour inheritance
	•	Pragmatic Drag & Drop refactor
	•	Enhanced Logging & Telemetry (?debug=db)
	•	Routines & Chores (recurring lists, streaks, optional blocks)

⸻

8) Schema Deltas (v3.1.1)
	•	Stories: ref, goalId, subGoalId?, sprintId?, rank fields, themeId
	•	Tasks: importanceScore, isImportant, reminderId, rank
	•	Sprints: ref, objective, status, rank
	•	Calendar Blocks: storyId?, habitId?, subTheme?, googleEventId?, themeId, conflictVersion
	•	Theme Settings: per-user, defaultThemeId, highContrastMode
	•	UI State: plannerRowExpansion, plannerVisibleSprints
	•	Sub-goals: id, goalId, title, rank
	•	Routines: routines, routine_items, routine_logs
	•	Audit Logs (staging)

⸻

9) Developer Tasks (v3.1.1)
	1.	Fix activity_stream write failures (referenceNumber/ref mismatch).
	2.	Fix Firestore listeners for Goals/Stories/Tasks.
	3.	Reinstate side-panel CRUD.
	4.	Render refs everywhere.
	5.	Fix sprint loading (indexes, listener lifecycle).
	6.	Fix Story creation under Goals.
	7.	Implement Enter-to-save globally.
	8.	Fix notes persistence/rendering.
	9.	Wire Enhanced Logging.
	10.	Expand tests.

⸻

10) New Requirements for v3.4 (Goal Visualization & CRUD)

10.1 CRUD Baseline
	•	Full CRUD for Goals, Stories, Tasks, Sprints across card + table views.
	•	Inline editing consistent across tables.

10.2 Goal Visualization View
	•	Roadmap-style timeline (calendar + sprint markers).
	•	Goal cards with start/end bars, theme colour-coded.
	•	Stories/Tasks tables beneath each Goal.
	•	Drag Goals → update dates & cascade sprint assignments.
	•	Confirmation modal if >2 Stories move.
	•	Drag Stories individually.

10.3 Activity Stream
	•	Log all Goal/Story/Task updates, sprint reassignments, comments.

10.4 Sharing & Export
	•	Accessible from nav.
	•	Printable (A3 horizontal).
	•	Shareable read-only link with filters.

10.5 Performance
	•	Handle 100+ Goals across 6+ themes.
	•	Load <3s, drag-drop <200ms.

➡ See goals_visualization.md for module details.

⸻

11) Schema Enhancements (v3.4)
	•	Goals: add startDate, endDate, themeId.
	•	Stories: add plannedSprintId.
	•	Activity Stream: add fieldUpdate, comment.
	•	Visualization State: { zoomLevel, visibleThemes[], collapsedGoals[] }.

⸻

12) Developer Tasks (v3.4)
	1.	CRUD parity across card/table views.
	2.	Build Goal Visualization (timeline grid + sprint overlay).
	3.	Implement confirmation logic.
	4.	Expand Activity Stream.
	5.	Add print/export/share link.
	6.	Optimize performance.

⸻

13) Testing & CI
	•	Unit: activity payload validation, date → sprint recalculation.
	•	Integration: confirmation modal triggers; Story moves cascade correctly.
	•	E2E: CRUD reflected in visualization; inline save works; share link loads.
	•	Perf: 100+ Goals load <3s; drag-drop <200ms.
	•	A11y: keyboard timeline nav, screen-reader labels.

⸻

14) AO Prompt

Review v3.1.1 codebase. Fix P1 defects first:
	•	Activity stream write failures (referenceNumber undefined).
	•	Boards/tables not syncing.
	•	Side-panel missing.
	•	Ref numbers not shown.
	•	Sprint spinner (index + duplicate listeners).
	•	Story creation under Goals.
	•	Notes not persisting.
	•	Enter-to-save.

Then implement v3.4 requirements: CRUD parity + Goal Visualization (timeline, sprint overlays, confirmation modal, Activity Stream logging, share/print). Ensure performance and accessibility. Deliver updated schema, code, and tests.

⸻

15) Conclusion

This document is the single source of truth for the BOB App moving from v3.1.1 to v3.4.
	•	Captures all current defects, including the Activity Stream referenceNumber failure.
	•	Defines CRUD + Visualization requirements.
	•	Aligns schema, developer tasks, and testing.
	•	Ready for AO/code review agent to reconcile and implement.
