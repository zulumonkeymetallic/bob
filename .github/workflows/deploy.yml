name: Deploy (disabled)

on:
  workflow_dispatch:
    inputs:
      channelId:
        description: "Firebase Hosting channel (e.g., preview or live)"
        required: false
        default: "live"

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 35
    # Protect with environment approvals/secrets. 'live' -> Production, other -> Test
    environment: 
      name: ${{ env.CHANNEL_ID == 'live' && 'Production' || 'Test' }}
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: false
    env:
      CHANNEL_ID: ${{ github.event.inputs.channelId || 'live' }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install root deps
        run: npm ci || npm i

      - name: Install app deps
        run: npm ci --prefix react-app || npm i --prefix react-app

      - name: Unit tests (CRA)
        run: npm test --prefix react-app -- --watchAll=false

      - name: Build app
        run: npm run build --prefix react-app

      - name: Check version alignment
        run: node scripts/check-version-alignment.js

      - name: Gate with E2E
        env:
          CI: true
          PW_USE_BUILD: '1'
          APP_BASE_URL: http://localhost:4173
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
        run: npx playwright test

      - name: Firebase Deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          channelId: ${{ env.CHANNEL_ID }}
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Post release notes
        if: ${{ success() }}
        run: echo "Deployed $(git rev-parse --short HEAD) to ${{ secrets.FIREBASE_PROJECT_ID }} (channel: ${{ env.CHANNEL_ID }})"
